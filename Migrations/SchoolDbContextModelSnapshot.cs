// <auto-generated />
using System;
using BluebirdCore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BluebirdCore.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    partial class SchoolDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BluebirdCore.Entities.AcademicYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AcademicYears");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2025, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsClosed = false,
                            Name = "2025",
                            StartDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BluebirdCore.Entities.ExamScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AcademicYear")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("CommentsUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CommentsUpdatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("CommentsUpdatedByTeacherId")
                        .HasColumnType("int");

                    b.Property<int>("ExamTypeId")
                        .HasColumnType("int");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RecordedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecordedBy")
                        .HasColumnType("int");

                    b.Property<decimal>("Score")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("Term")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommentsUpdatedByTeacherId");

                    b.HasIndex("ExamTypeId");

                    b.HasIndex("GradeId");

                    b.HasIndex("RecordedBy");

                    b.HasIndex("SubjectId");

                    b.HasIndex("StudentId", "SubjectId", "ExamTypeId", "AcademicYear", "Term")
                        .IsUnique();

                    b.ToTable("ExamScores");
                });

            modelBuilder.Entity("BluebirdCore.Entities.ExamType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ExamTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "First test of the term",
                            IsActive = true,
                            Name = "Test-One",
                            Order = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Second-test examination",
                            IsActive = true,
                            Name = "Test-Two",
                            Order = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "End of term examination",
                            IsActive = true,
                            Name = "End-of-Term",
                            Order = 3
                        });
                });

            modelBuilder.Entity("BluebirdCore.Entities.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CurriculumType")
                        .HasColumnType("int");

                    b.Property<int?>("HomeroomTeacherId")
                        .HasColumnType("int");

                    b.Property<int?>("IntroducedYear")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTransitional")
                        .HasColumnType("bit");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PhaseOutYear")
                        .HasColumnType("int");

                    b.Property<int>("Section")
                        .HasColumnType("int");

                    b.Property<string>("Stream")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ValidForCohorts")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("HomeroomTeacherId");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 0,
                            Name = "Baby-Class",
                            Section = 0,
                            Stream = "Purple"
                        },
                        new
                        {
                            Id = 2,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 1,
                            Name = "Baby-Class",
                            Section = 0,
                            Stream = "Green"
                        },
                        new
                        {
                            Id = 3,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 2,
                            Name = "Baby-Class",
                            Section = 0,
                            Stream = "Orange"
                        },
                        new
                        {
                            Id = 4,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 3,
                            Name = "Middle-Class",
                            Section = 0,
                            Stream = "Purple"
                        },
                        new
                        {
                            Id = 5,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 4,
                            Name = "Middle-Class",
                            Section = 0,
                            Stream = "Green"
                        },
                        new
                        {
                            Id = 6,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 5,
                            Name = "Middle-Class",
                            Section = 0,
                            Stream = "Orange"
                        },
                        new
                        {
                            Id = 7,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 6,
                            Name = "Reception-Class",
                            Section = 0,
                            Stream = "Purple"
                        },
                        new
                        {
                            Id = 8,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 7,
                            Name = "Reception-Class",
                            Section = 0,
                            Stream = "Green"
                        },
                        new
                        {
                            Id = 9,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 8,
                            Name = "Reception-Class",
                            Section = 0,
                            Stream = "Orange"
                        },
                        new
                        {
                            Id = 10,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 9,
                            Name = "Grade 1",
                            Section = 1,
                            Stream = "Purple"
                        },
                        new
                        {
                            Id = 11,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 10,
                            Name = "Grade 1",
                            Section = 1,
                            Stream = "Green"
                        },
                        new
                        {
                            Id = 12,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 11,
                            Name = "Grade 1",
                            Section = 1,
                            Stream = "Orange"
                        },
                        new
                        {
                            Id = 13,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 12,
                            Name = "Grade 2",
                            Section = 1,
                            Stream = "Purple"
                        },
                        new
                        {
                            Id = 14,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 13,
                            Name = "Grade 2",
                            Section = 1,
                            Stream = "Green"
                        },
                        new
                        {
                            Id = 15,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 14,
                            Name = "Grade 2",
                            Section = 1,
                            Stream = "Orange"
                        },
                        new
                        {
                            Id = 16,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 15,
                            Name = "Grade 3",
                            Section = 1,
                            Stream = "Purple"
                        },
                        new
                        {
                            Id = 17,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 16,
                            Name = "Grade 3",
                            Section = 1,
                            Stream = "Green"
                        },
                        new
                        {
                            Id = 18,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 17,
                            Name = "Grade 3",
                            Section = 1,
                            Stream = "Orange"
                        },
                        new
                        {
                            Id = 19,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 18,
                            Name = "Grade 4",
                            Section = 1,
                            Stream = "Purple"
                        },
                        new
                        {
                            Id = 20,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 19,
                            Name = "Grade 4",
                            Section = 1,
                            Stream = "Green"
                        },
                        new
                        {
                            Id = 21,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 20,
                            Name = "Grade 4",
                            Section = 1,
                            Stream = "Orange"
                        },
                        new
                        {
                            Id = 22,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 21,
                            Name = "Grade 5",
                            Section = 1,
                            Stream = "Purple"
                        },
                        new
                        {
                            Id = 23,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 22,
                            Name = "Grade 5",
                            Section = 1,
                            Stream = "Green"
                        },
                        new
                        {
                            Id = 24,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 23,
                            Name = "Grade 5",
                            Section = 1,
                            Stream = "Orange"
                        },
                        new
                        {
                            Id = 25,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 24,
                            Name = "Grade 6",
                            Section = 1,
                            Stream = "Purple"
                        },
                        new
                        {
                            Id = 26,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 25,
                            Name = "Grade 6",
                            Section = 1,
                            Stream = "Green"
                        },
                        new
                        {
                            Id = 27,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 26,
                            Name = "Grade 6",
                            Section = 1,
                            Stream = "Orange"
                        },
                        new
                        {
                            Id = 28,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = true,
                            Level = 27,
                            Name = "Grade 7",
                            PhaseOutYear = 2028,
                            Section = 1,
                            Stream = "Purple",
                            ValidForCohorts = "2025,2026,2027,2028"
                        },
                        new
                        {
                            Id = 29,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = true,
                            Level = 28,
                            Name = "Grade 7",
                            PhaseOutYear = 2028,
                            Section = 1,
                            Stream = "Green",
                            ValidForCohorts = "2025,2026,2027,2028"
                        },
                        new
                        {
                            Id = 30,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = true,
                            Level = 29,
                            Name = "Grade 7",
                            PhaseOutYear = 2028,
                            Section = 1,
                            Stream = "Orange",
                            ValidForCohorts = "2025,2026,2027,2028"
                        },
                        new
                        {
                            Id = 31,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 30,
                            Name = "Grade 8",
                            Section = 2,
                            Stream = "Grey"
                        },
                        new
                        {
                            Id = 32,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 31,
                            Name = "Grade 8",
                            Section = 2,
                            Stream = "Blue"
                        },
                        new
                        {
                            Id = 33,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 32,
                            Name = "Grade 9",
                            Section = 2,
                            Stream = "Grey"
                        },
                        new
                        {
                            Id = 34,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 33,
                            Name = "Grade 9",
                            Section = 2,
                            Stream = "Blue"
                        },
                        new
                        {
                            Id = 35,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 34,
                            Name = "Grade 10",
                            Section = 2,
                            Stream = "Grey"
                        },
                        new
                        {
                            Id = 36,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 35,
                            Name = "Grade 10",
                            Section = 2,
                            Stream = "Blue"
                        },
                        new
                        {
                            Id = 37,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 36,
                            Name = "Grade 11",
                            Section = 2,
                            Stream = "Grey"
                        },
                        new
                        {
                            Id = 38,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 37,
                            Name = "Grade 11",
                            Section = 2,
                            Stream = "Blue"
                        },
                        new
                        {
                            Id = 39,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 38,
                            Name = "Grade 12",
                            Section = 2,
                            Stream = "Grey"
                        },
                        new
                        {
                            Id = 40,
                            CurriculumType = 0,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 39,
                            Name = "Grade 12",
                            Section = 2,
                            Stream = "Blue"
                        },
                        new
                        {
                            Id = 41,
                            CurriculumType = 1,
                            IntroducedYear = 2025,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 27,
                            Name = "Form 1",
                            Section = 2,
                            Stream = "Grey"
                        },
                        new
                        {
                            Id = 42,
                            CurriculumType = 1,
                            IntroducedYear = 2025,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 28,
                            Name = "Form 1",
                            Section = 2,
                            Stream = "Blue"
                        },
                        new
                        {
                            Id = 43,
                            CurriculumType = 1,
                            IntroducedYear = 2026,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 30,
                            Name = "Form 2",
                            Section = 2,
                            Stream = "Grey"
                        },
                        new
                        {
                            Id = 44,
                            CurriculumType = 1,
                            IntroducedYear = 2026,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 31,
                            Name = "Form 2",
                            Section = 2,
                            Stream = "Blue"
                        },
                        new
                        {
                            Id = 45,
                            CurriculumType = 1,
                            IntroducedYear = 2027,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 33,
                            Name = "Form 3",
                            Section = 2,
                            Stream = "Grey"
                        },
                        new
                        {
                            Id = 46,
                            CurriculumType = 1,
                            IntroducedYear = 2027,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 34,
                            Name = "Form 3",
                            Section = 2,
                            Stream = "Blue"
                        },
                        new
                        {
                            Id = 47,
                            CurriculumType = 1,
                            IntroducedYear = 2028,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 36,
                            Name = "Form 4",
                            Section = 2,
                            Stream = "Grey"
                        },
                        new
                        {
                            Id = 48,
                            CurriculumType = 1,
                            IntroducedYear = 2028,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 37,
                            Name = "Form 4",
                            Section = 2,
                            Stream = "Blue"
                        },
                        new
                        {
                            Id = 49,
                            CurriculumType = 1,
                            IntroducedYear = 2029,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 39,
                            Name = "Form 5",
                            Section = 2,
                            Stream = "Grey"
                        },
                        new
                        {
                            Id = 50,
                            CurriculumType = 1,
                            IntroducedYear = 2029,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 40,
                            Name = "Form 5",
                            Section = 2,
                            Stream = "Blue"
                        },
                        new
                        {
                            Id = 51,
                            CurriculumType = 1,
                            IntroducedYear = 2030,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 39,
                            Name = "Form 6",
                            Section = 2,
                            Stream = "Grey"
                        },
                        new
                        {
                            Id = 52,
                            CurriculumType = 1,
                            IntroducedYear = 2030,
                            IsActive = true,
                            IsTransitional = false,
                            Level = 40,
                            Name = "Form 6",
                            Section = 2,
                            Stream = "Blue"
                        });
                });

            modelBuilder.Entity("BluebirdCore.Entities.GradeSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOptional")
                        .HasColumnType("bit");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("GradeId", "SubjectId")
                        .IsUnique();

                    b.ToTable("GradeSubjects");
                });

            modelBuilder.Entity("BluebirdCore.Entities.ReportCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AcademicYear")
                        .HasColumnType("int");

                    b.Property<DateTime>("GeneratedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("GeneratedBy")
                        .HasColumnType("int");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("Term")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GeneratedBy");

                    b.HasIndex("GradeId");

                    b.HasIndex("StudentId");

                    b.ToTable("ReportCards");
                });

            modelBuilder.Entity("BluebirdCore.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ArchiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<string>("GuardianName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GuardianPhone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("StudentNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.HasIndex("StudentNumber")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("BluebirdCore.Entities.StudentOptionalSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EnrolledAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("StudentId", "SubjectId")
                        .IsUnique();

                    b.ToTable("StudentOptionalSubjects");
                });

            modelBuilder.Entity("BluebirdCore.Entities.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "MATH",
                            IsActive = true,
                            Name = "Mathematics"
                        },
                        new
                        {
                            Id = 2,
                            Code = "ENG",
                            IsActive = true,
                            Name = "English"
                        },
                        new
                        {
                            Id = 3,
                            Code = "SCI",
                            IsActive = true,
                            Name = "Science"
                        },
                        new
                        {
                            Id = 4,
                            Code = "SS",
                            IsActive = true,
                            Name = "Social Studies"
                        },
                        new
                        {
                            Id = 5,
                            Code = "FR",
                            IsActive = true,
                            Name = "French"
                        },
                        new
                        {
                            Id = 6,
                            Code = "ICT",
                            IsActive = true,
                            Name = "ICT"
                        },
                        new
                        {
                            Id = 7,
                            Code = "PE",
                            IsActive = true,
                            Name = "Physical Education"
                        },
                        new
                        {
                            Id = 8,
                            Code = "ART",
                            IsActive = true,
                            Name = "Art"
                        });
                });

            modelBuilder.Entity("BluebirdCore.Entities.TeacherSubjectAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AssignedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherSubjectAssignments");
                });

            modelBuilder.Entity("BluebirdCore.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@school.edu",
                            FullName = "System Administrator",
                            IsActive = true,
                            PasswordHash = "$2a$12$Y5Cr10SW4OuJq6qxj7PXtOhZvb7loVQqIRRwcrH8hsdsoeRCririq",
                            Role = 1,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("BluebirdCore.Entities.ExamScore", b =>
                {
                    b.HasOne("BluebirdCore.Entities.User", "CommentsUpdatedByTeacher")
                        .WithMany()
                        .HasForeignKey("CommentsUpdatedByTeacherId");

                    b.HasOne("BluebirdCore.Entities.ExamType", "ExamType")
                        .WithMany("ExamScores")
                        .HasForeignKey("ExamTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BluebirdCore.Entities.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BluebirdCore.Entities.User", "RecordedByTeacher")
                        .WithMany()
                        .HasForeignKey("RecordedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BluebirdCore.Entities.Student", "Student")
                        .WithMany("ExamScores")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BluebirdCore.Entities.Subject", "Subject")
                        .WithMany("ExamScores")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CommentsUpdatedByTeacher");

                    b.Navigation("ExamType");

                    b.Navigation("Grade");

                    b.Navigation("RecordedByTeacher");

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("BluebirdCore.Entities.Grade", b =>
                {
                    b.HasOne("BluebirdCore.Entities.User", "HomeroomTeacher")
                        .WithMany("HomeroomGrades")
                        .HasForeignKey("HomeroomTeacherId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("HomeroomTeacher");
                });

            modelBuilder.Entity("BluebirdCore.Entities.GradeSubject", b =>
                {
                    b.HasOne("BluebirdCore.Entities.Grade", "Grade")
                        .WithMany("GradeSubjects")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BluebirdCore.Entities.Subject", "Subject")
                        .WithMany("GradeSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("BluebirdCore.Entities.ReportCard", b =>
                {
                    b.HasOne("BluebirdCore.Entities.User", "GeneratedByUser")
                        .WithMany()
                        .HasForeignKey("GeneratedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BluebirdCore.Entities.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BluebirdCore.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GeneratedByUser");

                    b.Navigation("Grade");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("BluebirdCore.Entities.Student", b =>
                {
                    b.HasOne("BluebirdCore.Entities.Grade", "Grade")
                        .WithMany("Students")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("BluebirdCore.Entities.StudentOptionalSubject", b =>
                {
                    b.HasOne("BluebirdCore.Entities.Student", "Student")
                        .WithMany("OptionalSubjects")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BluebirdCore.Entities.Subject", "Subject")
                        .WithMany("StudentOptionalSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("BluebirdCore.Entities.TeacherSubjectAssignment", b =>
                {
                    b.HasOne("BluebirdCore.Entities.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BluebirdCore.Entities.Subject", "Subject")
                        .WithMany("TeacherAssignments")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BluebirdCore.Entities.User", "Teacher")
                        .WithMany("TeacherAssignments")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("BluebirdCore.Entities.ExamType", b =>
                {
                    b.Navigation("ExamScores");
                });

            modelBuilder.Entity("BluebirdCore.Entities.Grade", b =>
                {
                    b.Navigation("GradeSubjects");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("BluebirdCore.Entities.Student", b =>
                {
                    b.Navigation("ExamScores");

                    b.Navigation("OptionalSubjects");
                });

            modelBuilder.Entity("BluebirdCore.Entities.Subject", b =>
                {
                    b.Navigation("ExamScores");

                    b.Navigation("GradeSubjects");

                    b.Navigation("StudentOptionalSubjects");

                    b.Navigation("TeacherAssignments");
                });

            modelBuilder.Entity("BluebirdCore.Entities.User", b =>
                {
                    b.Navigation("HomeroomGrades");

                    b.Navigation("TeacherAssignments");
                });
#pragma warning restore 612, 618
        }
    }
}
